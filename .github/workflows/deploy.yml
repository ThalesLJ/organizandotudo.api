name: Build and Deploy to VPS

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  REGISTRY: docker.io
  IMAGE_NAME: thaleslj/organizandotudo.api

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
        
    - name: Add VPS to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
        
    - name: Create production .env file
      run: |
        echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> .env
        echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env
        echo "PORT=3000" >> .env
        echo "NODE_ENV=production" >> .env
        
    - name: Copy docker-compose and env to VPS
      run: |
        scp docker-compose.yml ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/organizandotudo-api/
        scp .env ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:~/organizandotudo-api/
        
    - name: Deploy on VPS
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} << 'EOF'
          cd ~/organizandotudo-api
          
          # Stop existing containers (only this project)
          docker-compose down || true
          
          # Remove old images to free space
          docker image prune -f
          
          # Pull latest image and start containers
          docker-compose pull
          docker-compose up -d
          
          # Show logs
          docker-compose logs --tail=50
        EOF
        
    - name: Health check
      run: |
        sleep 30
        curl -f http://${{ secrets.VPS_HOST }}:3000/health || exit 1
